#!/usr/bin/perl -w
#
# pop3bench:
# POP3 server benchmarking tool.
#
# Copyright (c) 2004 Chris Lightfoot. All rights reserved.
# Email: chris@ex-parrot.com; WWW: http://www.ex-parrot.com/~chris/
#

my $rcsid = ''; $rcsid .= '$Id$';

use IO::Socket;
use Time::HiRes;
use Error qw(:try);

my $T = time();

sub howlong () {
    my $T2 = time();
    $T2 -= $T;
    $T = time();
    return $T2;
}

# parse_options ARGUMENTS
# Return a reference to a hash with the options to be used by the program.
sub parse_options (@) {
    my @args = @_;
    my $res = {
        port => 110,
        mode => 'tcp',
        apop => 0,
        pipelining => 0,
        user => undef,
        pass => undef,
        commands => [ list, uidl, retr ]
    };
    while (shift(@args) =~ /^--(.+)/) {
        if ($1 eq 'username') {
            $res->{user} = shift(@args);
        } elsif ($1 eq 'password') {
            $res->{pass} = shift(@args);
        } elsif ($1 eq 'apop') {
            $res->{apop} = 1;
        } elsif ($1 eq 'pipelining') {
            $res->{pipelining} = 1;
        } elsif ($1 eq 'commands') {
            my %allowed = map { $_ => 1 } qw(list uidl dele retr top noop);
            $res->{commands} = [ ];
            foreach (split(/,\s*/, shift(@args))) {
                $_ = lc($_);
                return "`$_' is not a known command" unless (exists($allowed{$_}));
                push(@{$res->{commands}}, $_);
            }
        } elsif ($1 =~ /^s?tls/) {
            return "specify at most one of --tls, --stls" if ($res->{mode} ne 'tcp')
            $res->{mode} = $1;
        } else {
            return "`--$1': unknown option";
        }
    }

    return "arguments are host and optional port" if (@args > 2 || @args == 0);

    $res->{host} = shift(@args);
    $res->{port} = shift(@args) if (@args);
}

