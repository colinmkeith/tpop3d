.TH TPOP3D.CONF 5
.\"
.\" tpop3d.conf.5: manual page for tpop3d configuration file
.\"
.\" Copyright (c) 2001 Chris Lightfoot. All rights reserved.
.\"
.\" $Id$
.\"

.\" Text begins
.SH NAME
tpop3d.conf \- configuration file for \fBtpop3d\fP(8)
.SH SYNOPSIS
.nf
# comment
\fIkey\fP: \fIvalue\fP
\fIkey\fP: \fIvalue\fP          \\
    \fIcontinuation of value\fP
  ...
.fi
.Sp
.SH DESCRIPTION

The \fBtpop3d\fP configuration file, \fB/etc/tpop3d.conf\fP, consists of a
number of \fIkey\fP:\ \fIvalue\fP pairs. Blank lines and comments introduced by
`#' are ignored. It is legal for \fIvalue\fP to be blank.

Presently-recognised configuration directives are:
.SS Global options

.TP
.nf
\fBlisten-address\fP: (\fIhostname\fP | \fIIP number\fP)[:\fIport\fP][(\fIdomain\fP)] ...
.fi
.Sp
The ports and addresses on which the daemon should listen for incoming
connections. If any \fIport\fP is not specified, it is assumed to be
\fBpop-3\fP (110). If \fIdomain\fP is not specified, it is assumed to be the
section of the name associated with the given address after the first `.', or,
if no such name can be established, the nodename of the system as determined
by
.BR uname (2).

To listen for connections on any interface and the default port, the directive

.nf
  listen-address: 0.0.0.0
.Sp
.fi

is sufficient. There is no default for this option.
.TP
\fBmax-children\fP: \fInumber\fP
The maximum number of child processes which may be actively serving
connections at any given time. Consists of a single number.
.TP
\fBappend-domain\fP: (\fByes\fP|\fBtrue\fP)
If authentication does not succeed for a given \fIusername\fP, retry with
\fIusername\fP@\fIdomain\fP, where \fIdomain\fP is the domain name associated
with the address on which the connection was received. This is intended to
be used where multiple virtual domains are served from multiple IP addresses.
This option only takes effect when \fIusername\fP does not contain a
separator, which may be `@', `%', `:' or `!'.
.TP
\fBtimeout-seconds\fP: \fInumber\fP
This is the number of seconds for which a connection may be idle for before it
is closed.  If it is set to 0, then timeouts are disabled.  The default value
is 30 seconds (see the section on BUGS in \fBtpop3d\fP(8)). If you wish to
have \fBtpop3d\fP comply explicitly with the RFC (which demands a ten-minute
timeout), then specify 600 seconds. This may be necessary with some clients
which pause randomly whilst downloading messages.
.TP
\fBlog-facility\fP: \fIfacility\fP
This selects the `facility' as which \fBtpop3d\fP emits system log messages.
Possible values for \fIfacility\fP are: \fBmail\fP, \fBauthpriv\fP,
\fBdaemon\fP, \fBuser\fP, and \fBlocal0\fP through \fBlocal7\fP inclusive.
(Although other possibilities are mentioned in \fBopenlog\fP(3), they don't
make much sense for a POP3 server.)
.TP
.nf
\fBmailbox\fP: [\fImailbox-driver\fP:]\fIpath-spec\fP ...
.fi
.Sp
This selects the location, and optionally the type, of the mailbox to use when
a user is authenticated. \fIMailbox-driver\fP should be one of the names
listed when you execute \fBtpop3d -h\fP; if left blank the default (first
available) one is used, but this is discouraged as it may vary between builds
of tpop3d. \fIPath-spec\fP should give a path name in the file system; you can
use the substitution strings \fB$(user)\fP for username, \fB$(home)\fP for the
user's home directory and \fB$(domain)\fP for the authenticated domain. In
addition, the syntax \fB$(foo[\fP\fIindex\fP\fB])\fP may be used to select a
given letter of the string. 0 is the first character, and -1 the last. This
allows the used of `hashed' spool directories; for example,

.nf
  mailbox: bsd:/var/spool/mail/$(user[0])/$(user)
.Sp
.fi

If several mailbox locations and types are specified, \fBtpop3d\fP will try
each in turn, stopping when it opens a mailbox or encounters an error other
than the mailbox not being present. This means that if your users have both
maildir and bsd mailboxes, you can use something like

.nf
  mailbox: maildir:$(home)/Maildir bsd:/var/spool/mail/$(user)
.Sp
.fi

to support both.

Some authentication drivers will set the mailbox explicitly, overriding this
option. Those that do not also have a specific option, of the form
\fBauth-foo-mailbox:\fP which overrides the global setting.

.TP
.nf
\fBmailspool-index:\fP \fIpath-spec\fP
.fi
.Sp
This selects the location of metadata cache files for BSD mailspools, based
on their file names. This option is only available when \fBtpop3d\fP is
compiled with metadata caching enabled, and it is only switched on when this
option is specified.

\fIPath-spec\fP gives the location of the metadata cache file, using
substitution strings similar to those for the \fBmailbox\fP option above. In
particular, you can use \fB$(name)\fP, the full name of the mailspool;
\fB$(path)\fP, the directory containing the mailspool; \fB$(file)\fP, the file
name of the mailspool (the part after the final `/'); and
\fB$(escaped_name)\fP, which is the full name of the mailspool escaped using
the HTTP-style \fB%..\fP convention so that it does not contain any slashes.

Examples include:

.nf
  mailspool-index: $(name).tpop3d-index
  mailspool-index: /var/spool/tpop3d/$(escaped_name)
.fi
.Sp

In order to use this facility, \fBtpop3d\fP must be able to write the metadata
cache files to the locations specified. If you choose to use a specific
directory for this (for instance, /var/spool/mail or /var/spool/tpop3d), you
will need to set appropriate permissions. 1777 (as for /tmp) is probably the
best choice. \fBtpop3d\fP will overwrite any file whose name is the same as
the specified cache file for a given mailspool; therefore, it is recommended
that the mailspool index files be stored in a directory to which users would
not customarily have access, for instance /var/spool/tpop3d.

.TP
.nf
\fBtcp-wrappers-name:\fP \fIname\fP
.fi
.Sp
This selects the `daemon name' used by \fBtpop3d\fP when it tests connections
against the TCP Wrappers access-control-mechanism. This corresponds to the
part of an entry before the first colon in hosts.allow or hosts.deny. If not
specified, this will default to `tpop3d'. This feature is only available if
\fBtpop3d\fP has been compiled with support for TCP Wrappers.

.SS PAM authentication options

.TP
\fBauth-pam-enable\fP: (\fByes\fP|\fBtrue\fP)
Enable authentication using Pluggable Authentication Modules.
.TP
\fBauth-pam-facility\fP: \fIfacility\fP
Sets the PAM facility name used by \fBtpop3d\fP to \fIfacility\fP. Defaults to
\fBtpop3d\fP.

.TP
\fBauth-pam-mail-group\fP: (\fIgroup-name\fP | \fIgid\fP)
The group name or gid under which access to the mailspool will take place. The
default for this option is the primary group of the authenticated user, which
may not work. You will normally want to set this to `mail'.

.SS Password authentication options

These are only available if you compiled \fBtpop3d\fP with \fBauth-passwd\fP
support.

.TP
\fBauth-passwd-enable\fP: (\fByes\fP|\fBtrue\fP)
Enable authentication using /etc/passwd (and /etc/shadow, if this option was
selected at compile time).
.TP
\fBauth-passwd-mail-group\fP: (\fIgroup-name\fP | \fIgid\fP)
The group name or gid under which access to the mailspool will take place. The
default for this option is the primary group of the authenticated user, which
will probably not work. You will normally want to set this to `mail'.

.SS MySQL authentication options

These are only available if you compiled tpop3d with \fBauth-mysql\fP support.

.TP
\fBauth-mysql-enable\fP: (\fByes\fP | \fBtrue\fP)
Enable MySQL authentication.
.TP
\fBauth-mysql-mail-group\fP: (\fIgroup-name\fP | \fIgid\fP)
The group name or gid under which access to the mailspool will take place. The
default for this option is the primary group of the UNIX user associated with
the virtual domain.
.TP
\fBauth-mysql-hostname\fI: \fIhostname\fP
Host on which to connect to MySQL, by default \fBlocalhost\fP.
.TP
\fBauth-mysql-database\fP: \fIdatabase\fP
MySQL database to use for authentication.
.TP
\fBauth-mysql-username\fP: \fIusername\fP
MySQL username used to access the database.
.TP
\fBauth-mysql-password\fP: \fIpassword\fP
Password of MySQL user.
.TP
\fBauth-mysql-pass-query\fP: \fIsubstitution string\fP
Query template to use for USER/PASS authentication.
.TP
\fBauth-mysql-apop-query\fP: \fIsubstitution string\fP
Query template to use for APOP authentication.
.TP
\fBauth-mysql-onlogin-query\fP: \fIsubstitution string\fP
Query template to use for POP-before-SMTP operation.
.PP
Since mailbox names are stored in the database, the \fBauth-mysql-mailbox:\fP
setting is ignored.

.SS A note on MySQL authentication

The MySQL authentication scheme is intended to be used with the
vmail-sql virtual domains configuration described at
\fIhttp://www.ex-parrot.com/~chris/vmail-sql/\fP, and by default the queries
it uses work with that schema.

However, it is also possible to use the \fBauth-mysql-pass-query\fP and
\fBauth-mysql-apop-query\fP directives to specify the SQL syntax for a
query to use against any database schema. These should specify queries which
return the mailbox file location, password hash, Unix user and mailbox type,
in that order. The variables \fB$(local_part)\fP and \fB$(domain)\fP are
substituted into the string, in the same way as for the mailbox path
specifications described above. The nature of password hashes is described
more fully in README.auth_mysql in the distribution. If you do not wish to use
either of USER/PASS or APOP authentication, specify the value \fBnone\fP for
the relevant configuration directive; otherwise, the default (vmail-sql)
query will be used.

As an example, if you have a table called users which contains fields login,
domain, cryptpw and the Maildir mailboxes for the users are under
/path/to/$(domain)/$(local_part), then you could use
.nf
  auth-mysql-pass-query:                      \\
      SELECT CONCAT('/path/to/', '$(domain)', \\
                    '/', '$(local_part)'),    \\
             CONCAT('{crypt}, cryptpw),       \\
             'mail', 'maildir'                \\
        FROM users                            \\
       WHERE login = '$(local_part)'          \\
         AND domain = '$(domain)'
.fi
.Sp

The \fBauth-mysql-onlogin-query\fP specifies an SQL statement (most likely
an INSERT or UPDATE) which is executed after a successful login. This is
intended to allow you to insert a record into a database table used to
permit relaying in a `POP-before-SMTP' scheme. For this query, the additional
value \fB$(clienthost)\fP indicates the connected client host, as a numeric IP
address. This statement will be executed for any successful login, not only
\fBauth-mysql\fP logins.

Note that the username and password supplied in the configuration file
are privileged information, in the sense that they would allow an
arbitrary person to obtain information from the database if they have
access to the machine on which it resides. \fBtpop3d\fP clears this data from
memory when the MySQL authentication code is initialised (though note
that if you leave the \fBauth-mysql-...\fP directives in place but remove the
\fBauth-mysql-enable: yes\fP line, then this will not occur). The corollary to
this is that the \fBtpop3d.conf\fP file should not be readable by arbitrary
users.

.SS External program (`other') authentication options

These are only available if you compiled \fBtpop3d\fP with support for
\fBauth-other\fP.

.TP
\fBauth-other-enable\fP: (\fByes\fP | \fBtrue\fP)
Enable external program authentication.
.TP
\fBauth-other-program\fP: \fIpath\fP
Program to use for external authentication; this must be an absolute path and
should process requests as described below.
.TP
\fBauth-other-user\fP: (\fIuser-name\fP | \fIuid\fP)
.TP
\fBauth-other-group\fP: (\fIgroup-name\fP | \fIgid\fP)
The user and group under which to run the authentication program.

.TP
\fBauth-other-timeout\fP: \fItime\fP
The timeout in seconds for authentication; may be a fractional value, by
default 0.75.

.SS A note on external program authentication

The intention of \fBauth-other\fP is to allow administrators to implement
custom virtual-domains or other authentication schemes, without having to
write C code to implement them. The distribution contains a perl module,
\fBTPOP3D::AuthDriver\fP, which makes it extremely easy to implement a new
authentication scheme, and various example scripts. One of the advantages of
this is that if you want to implement an authenticator which uses a relational
database other than MySQL, then you can use the support in perl's \fBDBI\fP
library.

An external authentication program reads data `packets' structured in the
following format on its standard input:

.nf
  \fIkey\fP\\0\fIvalue\fP\\0 ... \\0
.Sp
.fi

Defined \fIkey\fPs are:
.TP
\fBmethod\fP = (\fBAPOP\fP | \fBPASS\fP)
Authentication mechanism being attempted.
.TP
\fBuser\fP = \fIusername\fP
The username being sent with an APOP or USER command.
.TP
\fBclienthost\fP = \fIIP number\fP
The host from which the client is connected to the POP server.
.TP
\fBtimestamp\fP = \fItimestamp string\fP
(APOP only.) The `timestamp' string sent by the server to this client.
.TP
\fBdigest\fP = \fIhex digest\fP
(APOP only.) Hex representation of the MD5 digest sent by the client with an APOP command.
.TP
\fBpassword\fP = \fIpassword\fP
(PASS only.) The password sent with a PASS command.
.PP
In response to an \fBAPOP\fP or \fBPASS\fP request, the program should write to
standard output `packets' in the format described above. Defined \fIkey\fPs
are:
.TP
\fBresult\fP = (\fBYES\fP | \fBNO\fP)
Was authentication successful?
.TP
\fBlogmsg\fP = \fIstring\fP
(Optional.) Specifies a message to be written to the system log.
.PP
The following apply only if authentication is successful; all but \fBuid\fP
and \fBgid\fP are optional:
.TP
\fBuid\fP = (\fIuser-name\fP | \fIuid\fP)
.TP
\fBgid\fP = (\fIgroup-name\fP | \fIgid\fP)
The user and group with which to access the mailspool. Note that the user must
have a valid home directory.
.TP
\fBdomain\fP = \fIdomain\fP
The domain in which the user has been authenticated.
.TP
\fBmailbox\fP = \fIpath\fP
Path of this user's mailbox.
.TP
\fBmboxtype\fP = \fImailbox driver\fP
The type of the mailbox.
.PP
If the mailbox is not specified, then the normal mechanism (via configuration
directives \fBmailbox:\fP and \fBauth-other-mailbox:\fP) is used.

Your authentication program will also receive packets describing any successful
login. These may be used to implement POP-before-SMTP relaying. Such packets
have the form
.TP
\fBmethod\fP = \fBONLOGIN\fP
Indicating that the packet describes a login.
.TP
\fBlocal_part\fP = \fIlocal-part\fP
.TP
\fBdomain\fP = \fIdomain\fP
The local-part and domain of the authenticated user.
.TP
\fBclienthost\fP = \fIIP number\fP
The host from which the client is connected to the POP server.
.PP

The only valid responses to an \fBONLOGIN\fP request are an empty packet or one
containing only a \fBlogmsg\fP directive.

Note that \fBtpop3d\fP requires external authentication programs to respond in
a timely fashion, since authentication blocks the main daemon; if no response
is received within the timeout period specified, then the program will be
killed with \fBSIGTERM\fP; if it fails to expire, \fBSIGKILL\fP will then be
sent. An authentication program should catch \fBSIGTERM\fP to do any essential
cleaning up.

.SS Perl authentication options

These are only available if you compiled \fBtpop3d\fP with support for
\fBauth-perl\fP.

.TP
\fBauth-perl-enable\fP: (\fByes\fP | \fBtrue\fP)
Enable authentication via an embedded perl interpreter.
.TP
\fBauth-perl-start\fP: \fIperl code\fP
Specify a line of perl code to be executed at startup; in most cases, this
should be something like
.nf
  auth-perl-start: do '/etc/tpop3d/tpop3d.pl';
.Sp
.fi
.TP
\fBauth-perl-finish\fP: \fIperl code\fP
Specify a line fo perl code to be executed when the authentication driver is
shut down.
.TP
\fBauth-perl-apop\fP: \fIsubroutine name\fP
Specify the name of a perl subroutine which will be called when a request for
APOP authentication is received.
.TP
\fBauth-perl-pass\fP: \fIsubroutine name\fP
Specify the name of a perl subroutine which will be called when a request for
USER/PASS authentication is received.
.TP
\fBauth-perl-onlogin\fP: \fIsubroutine name\fP
Specify the name of a perl subroutine which will be called after a successful
login for POP-before-SMTP operation.

.SS A note on perl authentication

The perl authentication subroutines named in the configuration file should take
as their single argument a reference to a hash; this will contain keys and
values as listed for \fBauth-other\fP above. The subroutines should also return
a reference to a hash, indicating results as for \fBauth-other\fP. In addition,
they may call \fBTPOP3D::print_log\fP with a single scalar argument to write a
message via \fBtpop3d\fP's logging facility. The \fBauth-perl-onlogin\fP
subroutine is called after any successful login (not just logins mediated
by \fBauth-perl\fP) and is intended to be used to implement POP-before-SMTP
relaying; the return value from this subroutine is ignored.

.SH FILES
.B /etc/tpop3d.conf

.SH SEE ALSO
.BR tpop3d (8),
.BR mysql (1),
.BR hosts.allow (5),
.BR hosts.deny (5),
.BR TPOP3D::AuthDriver (1),
.BR RFC1939,
.br
.IR http://www.ex-parrot.com/~chris/tpop3d/ ,
.br
.IR http://www.ex-parrot.com/~chris/vmail-sql/ ,
.br
.IR http://www.mysql.com/ ,
.br
.IR http://lists.beasts.org/pipermail/tpop3d-discuss/ .

.SH AUTHOR
Chris Lightfoot <chris@ex-parrot.com>. Portions by Mark Longair and Paul
Makepeace.

If you have a query about \fBtpop3d\fP, \fIplease do not send me personal
email\fP. Instead, please send it to the \fBtpop3d\fP mailing list, to which
you can subscribe by sending an email with the subject `subscribe' to
.br
<tpop3d-discuss-request@lists.beasts.org>. There is a mailing list archive
at
.br
.IR http://lists.beasts.org/pipermail/tpop3d-discuss/ .

.SH VERSION
$Id$

.SH COPYING
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

