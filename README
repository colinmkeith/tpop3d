tpop3d, copyright (c) 2000 Chris Lightfoot <chris@ex-parrot.com>
  http://www.ex-parrot.com/~chris/tpop3d/

$Id$

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.


Introduction

tpop3d is yet-another-pop3-server. The intention has been to write a
server which is fast, extensible, and secure. `Extensible' is used
specifically in the context of new authentication mechanisms. Presently
the distribution contains auth_pam, which uses Linux-style Pluggable
Authentication Modules to mediate access of registered users of a
machine to their Unix-style mailboxes, and auth_mysql, which uses a
MySQL database to mediate access to virtual-domain email, and is compatible
with the vmail-sql schema for doing this:
  http://www.ex-parrot.com/~chris/vmail-sql/


Usage instructions

Have a look at the man page, tpop3d.8.


A note on developing new authentication schemes

The authentication strategy in tpop3d is very simple; a number of
"authentcation drivers" are defined, and referenced from authswitch.c.
Individual requests for authentcation (by USER/PASS or APOP) are passed
to each in turn, and the first to return a positive response is
considered to have successfullly authenticated the user; no others are
called.

An example authentication driver, which uses getpwnam(3) and crypt(3) to
perform `traditional' UNIX user authentication, is included in
auth_passwd.[ch] (but is not, by default, included in the compiled
binary).

auth_mysql.[ch] gives an example of an authentication driver for virtual
domains served from a single IP address (that is, where the user
identifies themself to the POP3 service as `user@domain'. If you would
like to do IP-based virtual hosting, consider doing this by appending
an appropriate domain name to the passed username and then passing the
result to the existing drivers; this will avoid having to implement
similar code twice for the two scenarios.
